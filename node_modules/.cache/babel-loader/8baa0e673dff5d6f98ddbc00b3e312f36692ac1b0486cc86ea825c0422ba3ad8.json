{"ast":null,"code":"var _jsxFileName = \"/home/eda/Business/frontend/src/pages/UserProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('authToken'); // Get the token from localStorage\n\n      if (!token) {\n        setError('No token found');\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}` // Send the stored token in the request header\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setUserData(data);\n        } else {\n          throw new Error(data.msg || 'Failed to fetch profile');\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchUserData();\n  }, []); // Empty dependency array ensures this runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), userData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(userData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"/HRcFU7gqxiwr4XfW3ENXlP9MF0=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserProfile","_s","userData","setUserData","error","setError","fetchUserData","token","localStorage","getItem","response","fetch","method","headers","data","json","ok","Error","msg","message","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/eda/Business/frontend/src/pages/UserProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst UserProfile = () => {\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const token = localStorage.getItem('authToken'); // Get the token from localStorage\n\n      if (!token) {\n        setError('No token found');\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/profile', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`, // Send the stored token in the request header\n          },\n        });\n\n        const data = await response.json();\n        if (response.ok) {\n          setUserData(data);\n        } else {\n          throw new Error(data.msg || 'Failed to fetch profile');\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchUserData();\n  }, []); // Empty dependency array ensures this runs only once on component mount\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n      {userData ? (\n        <div>\n          <h1>Profile Data</h1>\n          <pre>{JSON.stringify(userData, null, 2)}</pre>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;MAEjD,IAAI,CAACF,KAAK,EAAE;QACVF,QAAQ,CAAC,gBAAgB,CAAC;QAC1B;MACF;MAEA,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;UACrEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUN,KAAK,EAAE,CAAE;UACtC;QACF,CAAC,CAAC;QAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAIL,QAAQ,CAACM,EAAE,EAAE;UACfb,WAAW,CAACW,IAAI,CAAC;QACnB,CAAC,MAAM;UACL,MAAM,IAAIG,KAAK,CAACH,IAAI,CAACI,GAAG,IAAI,yBAAyB,CAAC;QACxD;MACF,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;MACzB;IACF,CAAC;IAEDb,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAqB,QAAA,GACGhB,KAAK,iBAAIL,OAAA;MAAAqB,QAAA,EAAIhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBtB,QAAQ,gBACPH,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBzB,OAAA;QAAAqB,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACxB,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,gBAENzB,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhDID,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}